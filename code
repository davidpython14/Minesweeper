import pygame
import os
import time
import random
pygame.init()
pygame.font.init()
pygame.mixer.init()

purple = (26,35,126)
black = (0,0,0)
white = (255,255,255)
red = (255,0,0)
green = (0,255,0)
blue = (0,0,255)
green1 = (179,224,91)
green2 = (160,204,76)
gray1 = (228,193,193)
gray2 = (210,180,153)

run = True
died = False
block_size = 60
h_win = 480
w_win = 600
win = pygame.display.set_mode((w_win,h_win))
win.fill(white)
NUMS_FONT = pygame.font.SysFont('comicsans', 50)
deg = pygame.transform.scale(pygame.image.load(os.path.join
("C:\\Users//97254\\PycharmProjects\\pythonweb1\\styles\\shola_booms_style\\aa.png")).convert_alpha(), (block_size, block_size))
screen_places1 = [[0,0,1,-1,-1,2,-1,1,0,0]
    ,[0,0,1,2,2,2,1,1,0,0]
    ,[1,2,2,1,0,0,0,1,1,1]
    ,[2,-1,-1,1,0,0,0,1,-1,1]
    ,[2,-1,4,2,1,0,0,1,1,1]
    ,[1,1,2,-1,1,0,1,1,1,0]
    ,[0,0,1,1,1,0,2,-1,2,0]
    ,[0,0,0,0,0,0,2,-1,2,0]]
start_blocks1 = [[3,1],[4,1],[5,1],[6,1],[7,1]#
        ,[3,2],[4,2],[5,2],[6,2],[7,2]
        ,[3,3],[4,3],[5,3],[6,3],[7,3]
        ,[3,4],[4,4],[5,4],[6,4],[7,4]
        ,[0,5],[1,5],[2,5],[4,5],[5,5],[6,5],[7,5]
        ,[0,6],[1,6],[2,6],[3,6],[4,6],[5,6],[6,6]
        ,[0,7],[1,7],[2,7],[3,7],[4,7],[5,7],[6,7]]
deg_l = []
game_now = random.randint(1,3)

def start_chack(x,y,start_b):
    for i in range(len(start_b)):
        if x == start_b[i][1] and y == start_b[i][0]:
            return True
    return False

def draw_game():
    global start_blocks1
    i = 0
    b_c = white

    for x in range(8):
        i += 1
        for y in range(10):
            i += 1

            if start_chack(2,0,start_blocks1) and start_chack(2,1,start_blocks1) and start_chack(2,2,start_blocks1)\
                    and start_chack(0,2,start_blocks1) and start_chack(1,2,start_blocks1) \
                    and not(start_chack(0,0,start_blocks1)) and not(start_chack(1,1,start_blocks1)):
                start_blocks1.append([0,0])
                start_blocks1.append([1, 0])
                start_blocks1.append([1, 1])
                start_blocks1.append([0, 1])
            if start_chack(7,0,start_blocks1) and start_chack(7,1,start_blocks1) and start_chack(7,2,start_blocks1)\
                     and start_chack(2,8,start_blocks1) and start_chack(2,9,start_blocks1)\
                    and not(start_chack(0,9,start_blocks1)) and not(start_chack(0,8,start_blocks1)):
                start_blocks1.append([9,0])
                start_blocks1.append([8, 0])
                start_blocks1.append([8, 1])
                start_blocks1.append([9, 1])
                start_blocks1.append([7,0])
            if start_chack(6,8,start_blocks1) and start_chack(5,8,start_blocks1) and start_chack(4,8,start_blocks1)\
                    and start_chack(4,9,start_blocks1) and not(start_chack(7,9,start_blocks1)) and not(start_chack(6,9,start_blocks1)):
                start_blocks1.append([9, 5])
                start_blocks1.append([8, 7])
                start_blocks1.append([9, 6])
                start_blocks1.append([9, 7])

            if i % 2 == 0:
                rest = green1
                gray = gray1
            else:
                rest = green2
                gray = gray2

            pygame.draw.rect(win, rest, (y * block_size, x * block_size, y * block_size + block_size, x * block_size + block_size))

            if not(start_chack(x,y,start_blocks1)):######if the block isn't in the start
                continue

            pygame.draw.rect(win, gray, (y * block_size, x * block_size, y * block_size + block_size, x * block_size + block_size))
            place = screen_places1[x][y]
            if place == 1:
                b_c = blue
            elif place == -1:
                b_c = red
            elif place == 2:
                b_c = green
            elif place == 4:
                b_c = purple
            elif place == 0:
                continue

            if place != -1:
                num = NUMS_FONT.render(f"{screen_places1[x][y]}", True, b_c)
                win.blit(num, (y * block_size + 15, x * block_size - 5, y * block_size + 30, x * block_size + 20))
            else:
                print("you died 1")
                game_over("You lose")
    for d in deg_l:
        win.blit(deg, (d[1] * block_size, d[0] * block_size))
    check_win()

def click_check():
    mx, my = pygame.mouse.get_pos()
    x = mx // block_size
    y = my // block_size
    block_choose = screen_places1[y][x]
    if [x,y] in start_blocks1:
        pass
    elif block_choose == -1:
        print("you died 2")
        game_over("You lose")
    else:
        start_blocks1.append([x,y])
        draw_game()

def click_mark():
    mx, my = pygame.mouse.get_pos()
    x = mx // block_size
    y = my // block_size
    block_choose = screen_places1[y][x]
    if not([x,y] in start_blocks1):
        if [y,x] in deg_l:
            if x % 2 == 0 and y % 2 == 0:
                rest = green1
            else:
                rest = green2
            print((x*block_size,y*block_size,x*block_size,y*block_size + block_size))
            deg_l.remove([y,x])
            pygame.draw.rect(win, rest,(x*block_size,y*block_size,x*block_size+block_size,y*block_size + block_size))
        else:
            win.blit(deg, (x * block_size, y * block_size))
            deg_l.append([y, x])

def game_over(a):
    global died
    died = True
    num = NUMS_FONT.render(a, True, black)
    win.blit(num, ((w_win - num.get_width()) // 2,(h_win - num.get_height()) // 2))
    pygame.display.update()
    time.sleep(1)

def restart():
    global start_blocks1
    global died
    global deg_l
    died = False
    deg_l = []
    start_blocks1 = [[3, 1], [4, 1], [5, 1], [6, 1], [7, 1]
        , [3, 2], [4, 2], [5, 2], [6, 2], [7, 2]
        , [3, 3], [4, 3], [5, 3], [6, 3], [7, 3]
        , [3, 4], [4, 4], [5, 4], [6, 4], [7, 4]
        , [0, 5], [1, 5], [2, 5], [4, 5], [5, 5], [6, 5], [7, 5]
        , [0, 6], [1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6]
        , [0, 7], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7]]
    draw_game()

def check_win():
    global deg_l
    if [5,3] in deg_l and [3,2] in deg_l and [3,1] in deg_l and [4,1] in deg_l and [6,7] in deg_l and [7,7] in deg_l and [0,6] in deg_l and [0,4] in deg_l and [0,3] in deg_l and [3,8] in deg_l:
        game_over("You win")

try:
    while run:
        mx, my = pygame.mouse.get_pos()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    restart()
            if event.type == pygame.MOUSEBUTTONDOWN and not (died):
                press_left, middel, press_right = pygame.mouse.get_pressed()
                if press_right:
                    click_mark()
                elif press_left:
                    click_check()
        win.fill(white)
        draw_game()
        pygame.display.update()

except:
    print(deg_l)
    print(start_blocks1)
